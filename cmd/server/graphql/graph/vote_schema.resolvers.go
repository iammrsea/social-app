package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.70

import (
	"context"
	"fmt"

	"github.com/iammrsea/social-app/cmd/server/graphql/graph/model"
	"github.com/iammrsea/social-app/internal/interaction/domain"
)

// Vote is the resolver for the vote field.
func (r *mutationResolver) Vote(ctx context.Context, input *model.VoteInput) (*domain.VoteReadMoel, error) {
	panic(fmt.Errorf("not implemented: Vote - vote"))
}

// GetVotes is the resolver for the getVotes field.
func (r *queryResolver) GetVotes(ctx context.Context) ([]*domain.VoteReadMoel, error) {
	panic(fmt.Errorf("not implemented: GetVotes - getVotes"))
}

// Type is the resolver for the type field.
func (r *voteResolver) Type(ctx context.Context, obj *domain.VoteReadMoel) (string, error) {
	panic(fmt.Errorf("not implemented: Type - type"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

// Vote returns VoteResolver implementation.
func (r *Resolver) Vote() VoteResolver { return &voteResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
type voteResolver struct{ *Resolver }
